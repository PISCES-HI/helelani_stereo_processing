#!/usr/bin/env python

import sys
import rospy
from sensor_msgs.msg import Image
import stereoanaglyph
import PIL.Image

img_pub = None
img_left = None
img_right = None
img_mask = 0

def do_anaglyph():
    global img_pub, img_left, img_right, img_mask
    img_out = Image(encoding='rgb8')
    img_out.data = stereoanaglyph.Anaglyph(img_left, img_right, 'parallel')
    img_out.width, img_out.height = img_left.size
    img_out.step = img_left.size[0] * 3
    img_pub.publish(img_out)
    img_mask = 0

def left_callback(data):
    global img_left, img_mask
    img_left = PIL.Image.frombuffer('L', (data.width, data.height), data.data, 'raw', 'L', 0, 1)
    img_mask |= 0x1
    if img_mask & 0x3 == 0x3:
        do_anaglyph()

def right_callback(data):
    global img_right, img_mask
    img_right = PIL.Image.frombuffer('L', (data.width, data.height), data.data, 'raw', 'L', 0, 1)
    img_mask |= 0x2
    if img_mask & 0x3 == 0x3:
        do_anaglyph()

def node_entry():
    global img_pub
    rospy.init_node('stereo_anaglyph', anonymous=True)
    rospy.Subscriber('left_image_in', Image, left_callback)
    rospy.Subscriber('right_image_in', Image, right_callback)
    img_pub = rospy.Publisher('image_out', Image, queue_size=10)
    rospy.spin()

if __name__ == '__main__':
    try:
        node_entry()
    except rospy.ROSInterruptException:
        pass
